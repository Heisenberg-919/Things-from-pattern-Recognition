# Import necessary libraries
from sklearn.cluster import DBSCAN
from sklearn.datasets import make_blobs
import matplotlib.pyplot as plt

# Step 1: Generate synthetic data for clustering (optional, or replace with your data)
X, y = make_blobs(n_samples=300, centers=4, cluster_std=0.6, random_state=42)

# Step 2: Visualize the generated data (optional)
plt.scatter(X[:, 0], X[:, 1], s=50)
plt.title("Data Points")
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.show()

# Step 3: Initialize and fit the DBSCAN model
# `eps` is the maximum distance between two samples for them to be considered as neighbors.
# `min_samples` is the minimum number of samples required to form a dense region (cluster).
eps_value = 0.5
min_samples_value = 5
model = DBSCAN(eps=eps_value, min_samples=min_samples_value)

# Fit the model to the data
cluster_labels = model.fit_predict(X)

# Step 4: Plot the clusters with their assigned labels
# Points labeled as -1 are considered noise
plt.scatter(X[:, 0], X[:, 1], c=cluster_labels, cmap='viridis', s=50)
plt.title(f"DBSCAN Clustering (eps={eps_value}, min_samples={min_samples_value})")
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.show()
